name: Create and publish Docker image

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      sogo: ${{ steps.filter.outputs.sogo }}
    steps:
    - name: Checkout repository
      if: github.event_name != 'pull_request'
      uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          sogo:
          - Dockefile
          - versions.yaml
          - 'sogo-conf/**'
          - 'nginx-conf/**'
          - 'artifacts/**'
  sogo:
    needs: changes
    if: needs.changes.outputs.sogo == 'true'
    runs-on: ubuntu-latest
    permissions: # permissions for GITHUB_TOKEN
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
#    - name: Login to Docker Hub
#      uses: docker/login-action@v3
#      with:
#        username: ${{ vars.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Login to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm/v7,linux/arm/v8
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
